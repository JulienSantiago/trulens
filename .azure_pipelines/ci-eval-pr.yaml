# This a definition for azure pipelines, not github pipelines. There are
# differences between these systems.

trigger: none

pr:
  # Run this pipeline for any PR that wishes to push to main that changes code
  # inside trulens_eval folder.
  branches:
    include:
      - main
  paths:
    include:
      - trulens_eval

jobs:
  - job: PRBranchProtect # name seems to be important but cannot figure out why
    pool:
      vmImage: ubuntu-latest
    timeoutInMinutes: 30

    strategy:
      matrix:
        default: # name is important
          python-version: 3.12
          tests-folder: tests/unit
        py308-static:
          python-version: 3.8
          tests-folder: tests/unit/static
        py309-static:
          python-version: 3.9
          tests-folder: tests/unit/static
        py310-static:
          python-version: 3.10
          tests-folder: tests/unit/static
        py311-static:
          python-version: 3.11
          tests-folder: tests/unit/static

    steps:
      - checkout: self
        clean: true

      - bash: |
          # Install pyenv and poetry
          curl https://pyenv.run | bash
          export PATH="$HOME/.pyenv/bin:$PATH"
          pyenv install $(python-version)
          pyenv local $(python-version)
          curl -sSL https://install.python-poetry.org | python3 -

          # Show python version
          which python
          python --version
        displayName: Env Setup

      - bash: |
          set -e
          poetry install --only main --sync --verbose
        displayName: Install Required Packages

      - bash: |
          set -e
          echo $(which python)
          echo $(pyenv which python)
          ruff format --diff
        condition: eq(variables['python-version'], 3.12) # only run format check with latest python version
        displayName: Format Diffs

      - bash: |
          set -e
          python -m pytest --test-run-title="Required $(python-version) unit tests" $(tests-folder)
        displayName: Unit Tests with Required Packages

      - bash: |
          set -e
          poetry install --sync --verbose
          python --version
          pip --version
        displayName: Install Optional Packages

      - bash: |
          set -e
          python -m pytest  --test-run-title="Optional $(python-version) unit tests" $(tests-folder)
        env:
          # enables optional tests, see tests/unit/test.py
          TEST_OPTIONAL: true

          # tests make use of various APIs:
          OPENAI_API_KEY: $(OPENAI_API_KEY)
          HUGGINGFACE_API_KEY: $(HUGGINGFACE_API_KEY)
          PINECONE_API_KEY: $(PINECONE_API_KEY)
          PINECONE_ENV: $(PINECONE_ENV)
          HUGGINGFACEHUB_API_TOKEN: $(HUGGINGFACEHUB_API_TOKEN)

        displayName: Unit Tests with Optional Packages
