pr:
  branches:
    include:
      - main
      - releases/*
  paths:
    include:
      - trulens_eval

jobs:
  - job: PRBranchProtect
    #pool:
    #  vmImage: "ubuntu-latest"
    timeoutInMinutes: 30

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        tests-folder: ["tests/unit", "tests/unit/static"]
        exclude: 
          - tests-folder: "tests/unit"
            python-version: ["3.8", "3.9", "3.10"] # only run full set of unit tests on 3.11
          - tests-folder: "tests/unit/static" # already included in parent folder
            python-version: ["3.11"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python # Set Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      #- name: Add conda to PATH
      #  bash: echo "##vso[task.prependpath]$CONDA/bin"

      #- name: Create Anaconda environment with python=$(pyversion)
      #  bash: |
      #    set -e
      #    conda create  -y --quiet -n $(condaEnvFileSuffix) python=$(pyversion)
      #    conda init bash

      - if: $(python-version) == 3.11 # only run format check with latest python version
        name: Format Code
        run: |
          #set -e
          #source activate $(condaEnvFileSuffix)

          pip install yapf==0.32.0
          pip install isort==5.10.1

          yapf --version
          isort --vn

          ./format.sh --eval

      - name: NoDiffCheck
        run: |
          num_changed_files=`git ls-files --others -m --exclude-standard ./trulens_eval | wc -l`
          if [ $num_changed_files -ne 0 ]; then
            echo "The following files have changed after running format.sh. Please format your code and update the PR."
            git ls-files --others -m --exclude-standard ./trulens_eval
            echo "\n\nOutputting git diff for checked in files.\n"
            git diff
          fi

      - name: Install trulens
        run: |
          #set -e
          #source activate $(condaEnvFileSuffix)

          cd ./trulens_eval
          pip install -e .

          python --version
          pip --version
          pip list

      - name: Install testing packages
        run: |
          #set -e
          #source activate $(condaEnvFileSuffix)

          pip install ipykernel
          pip install pytest==7.0.1 pytest-azurepipelines

          python -m ipykernel install --user \
            --name $(condaEnvFileSuffix) \
            --display-name $(condaEnvFileSuffix)

      - name: Unit tests
        run: |
          #source activate $(condaEnvFileSuffix)

          cd ./trulens_eval
          python -m pytest $(testSubdirectory)

      - name: Install optional packages
        run: |
          #set -e
          #source activate $(condaEnvFileSuffix)

          cd ./trulens_eval

          pip install -r trulens_eval/requirements.optional.txt

          python --version
          pip --version
          pip list

      - name: Unit tests with optional packages
        run: |
          python -m pytest ${{ matrix.tests-folder }}

        env:
          OPENAI_API_KEY: $(OPENAI_API_KEY)
          HUGGINGFACE_API_KEY: $(HUGGINGFACE_API_KEY)
          PINECONE_API_KEY: $(PINECONE_API_KEY)
          PINECONE_ENV: $(PINECONE_ENV)
          HUGGINGFACEHUB_API_TOKEN: $(HUGGINGFACEHUB_API_TOKEN)